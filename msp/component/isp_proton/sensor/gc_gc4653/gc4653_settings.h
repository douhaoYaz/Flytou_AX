/**********************************************************************************
 *
 * Copyright (c) 2019-2020 Beijing AXera Technology Co., Ltd. All Rights Reserved.
 *
 * This source file is the property of Beijing AXera Technology Co., Ltd. and
 * may not be copied or distributed in any isomorphic form without the prior
 * written consent of Beijing AXera Technology Co., Ltd.
 *
 **********************************************************************************/

#ifndef __SENSOR_GC4653_SETTINGS_H__
#define __SENSOR_GC4653_SETTINGS_H__

#include "ax_sensor_struct.h"
#include "isp_sensor_internal.h"

#define GC4653_SLAVE_ADDR 0x29 /**< or 0x10 i2c slave address of the gc4653 camera sensor */
#define GC4653_SENSOR_CHIP_ID 0x4653
#define GC4653_ADDR_BYTE 2
#define GC4653_DATA_BYTE 1
#define GC4653_SWAP_BYTES 1

/* Exposure control related registers */
#define     GC4653_LONG_EXP_LINE_H      (0x0202)  /* bit[13:8] */
#define     GC4653_LONG_EXP_LINE_L      (0x0203)  /* bit[7:0] */
#define     GC4653_LONG_AGAIN0          (0x02b3)  /* bit[7:0] */
#define     GC4653_LONG_AGAIN1          (0x02b4)  /* bit[10:8] */
#define     GC4653_LONG_AGAIN2          (0x02b8)  /* bit[13:6] */
#define     GC4653_LONG_AGAIN3          (0x02b9)  /* bit[5:0] */
#define     GC4653_LONG_AGAIN4          (0x0515)  /* bit[7:0] */
#define     GC4653_LONG_AGAIN5          (0x0519)  /* bit[7:0] */
#define     GC4653_LONG_AGAIN6          (0x02d9)  /* bit[7:0] */

#define     GC4653_LONG_DGAIN0          (0x020e)  /* bit[9:6] */
#define     GC4653_LONG_DGAIN1          (0x020f)  /* bit[5:0] */

typedef struct SENSOR_GC4653_S {
    AX_U32 hts;
    AX_U32 vs_hts;
    AX_U32 vts;
    AX_F32 sclk;
    AX_F32 line_period;
    AX_U32 line_period_fixednum;    /* U22.10 */
} SNSGC4653_OBJ;

typedef enum {
    Allpixel_CSI2_2lane_648Mbps_24MHz_AD10bit_Master_LCG_30fps,
    Allpixel_CSI2_2lane_648Mbps_24MHz_AD10bit_Master_LCG_25fps,
    GC4653_SETTTING_SEL_MAX
} GC4653_SETTING_SEL_E;

/*
//mclk 24Mhz
//mipi_data_rate 648Mbps
//framelength 1500
//linelength 4800
//pclk 216Mhz
//rowtime 22.2222us
*/

static camera_i2c_reg_array Allpixel_CSI2_2lane_648Mbps_24MHz_AD10bit_Master_LCG_30fps_setting[] = {
    {0x03fe, 0xf0},
    {0x03fe, 0x00},
    {0x0317, 0x00},
    {0x0320, 0x77},
    {0x0324, 0xc8},
    {0x0325, 0x06},
    {0x0326, 0x6c},
    {0x0327, 0x03},
    {0x0334, 0x40},
    {0x0336, 0x6c},
    {0x0337, 0x82},
    {0x0315, 0x25},
    {0x031c, 0xc6},
    {0x0287, 0x18},
    {0x0084, 0x00},
    {0x0087, 0x50},
    {0x029d, 0x08},
    {0x0290, 0x00},
    {0x0340, 0x05},
    {0x0341, 0xdc},
    {0x0345, 0x06},
    {0x034b, 0xb0},

    {0x0352, 0x06},
    {0x0354, 0x07},
    {0x02d1, 0xe0},
    {0x0223, 0xf2},
    {0x0238, 0xa4},
    {0x02ce, 0x7f},
    {0x0232, 0xc4},
    {0x02d3, 0x05},
    {0x0243, 0x06},
    {0x02ee, 0x30},
    {0x026f, 0x70},
    {0x0257, 0x09},
    {0x0211, 0x02},
    {0x0219, 0x09},
    {0x023f, 0x2d},
    {0x0518, 0x00},
    {0x0519, 0x01},
    {0x0515, 0x08},
    {0x02d9, 0x3f},
    {0x02da, 0x02},
    {0x02db, 0xe8},
    {0x02e6, 0x20},
    {0x021b, 0x10},
    {0x0252, 0x22},
    {0x024e, 0x22},
    {0x02c4, 0x01},
    {0x021d, 0x17},
    {0x024a, 0x01},
    {0x02ca, 0x02},
    {0x0262, 0x10},
    {0x029a, 0x20},
    {0x021c, 0x0e},
    {0x0298, 0x03},
    {0x029c, 0x00},
    {0x027e, 0x14},
    {0x02c2, 0x10},
    {0x0540, 0x20},
    {0x0546, 0x01},
    {0x0548, 0x01},
    {0x0544, 0x01},
    {0x0242, 0x1b},
    {0x02c0, 0x1b},
    {0x02c3, 0x20},
    {0x02e4, 0x10},
    {0x022e, 0x00},
    {0x027b, 0x3f},
    {0x0269, 0x0f},
    {0x02d2, 0x40},
    {0x027c, 0x08},
    {0x023a, 0x2e},
    {0x0245, 0xce},
    {0x0530, 0x20},
    {0x0531, 0x02},
    {0x0228, 0x50},
    {0x02ab, 0x00},
    {0x0250, 0x00},
    {0x0221, 0x50},
    {0x02ac, 0x00},
    {0x02a5, 0x02},
    {0x0260, 0x0b},
    {0x0216, 0x04},
    {0x0299, 0x1C},
    {0x02bb, 0x0d},
    {0x02a3, 0x02},
    {0x02a4, 0x02},
    {0x021e, 0x02},
    {0x024f, 0x08},
    {0x028c, 0x08},
    {0x0532, 0x3f},
    {0x0533, 0x02},
    {0x0277, 0xc0},
    {0x0276, 0xc0},
    {0x0239, 0xc0},
    {0x0202, 0x05},
    {0x0203, 0xd0},
    {0x0205, 0xc0},
    {0x02b0, 0x68},
    {0x0002, 0xa9},
    {0x0004, 0x01},
    {0x021a, 0x98},
    {0x0266, 0xa0},
    {0x0020, 0x01},
    {0x0021, 0x03},
    {0x0022, 0x00},
    {0x0023, 0x04},

    {0x0342, 0x06},
    {0x0343, 0x40},
    {0x03fe, 0x10},
    {0x03fe, 0x00},
    {0x0106, 0x78},
    {0x0108, 0x0c},
    {0x0114, 0x01},
    {0x0115, 0x10}, //0x12 coninute mode, 0x10 no-continue mode
    {0x0180, 0x46},
    {0x0181, 0x30},
    {0x0182, 0x05},
    {0x0185, 0x01},
    {0x03fe, 0x10},
    {0x03fe, 0x00},
    {0x000f, 0x00},
    {0x0100, 0x09}, //stream on
    //otp
    {0x0080, 0x02},
    {0x0097, 0x0a},
    {0x0098, 0x10},
    {0x0099, 0x05},
    {0x009a, 0xb0},
    {0x0317, 0x08},
    {0x0a67, 0x80},
    {0x0a70, 0x03},
    {0x0a82, 0x00},
    {0x0a83, 0x10},
    {0x0a80, 0x2b},
    {0x05be, 0x00},
    {0x05a9, 0x01},
    {0x0313, 0x80},
    {0x05be, 0x01},
    {0x0317, 0x00},
    {0x0a67, 0x00},
    {0x0000,  0x00},  // end flag
};

static camera_i2c_reg_array Allpixel_CSI2_2lane_648Mbps_24MHz_AD10bit_Master_LCG_25fps_setting[] = {
    {0x03fe, 0xf0},
    {0x03fe, 0x00},
    {0x0317, 0x00},
    {0x0320, 0x77},
    {0x0324, 0xc8},
    {0x0325, 0x06},
    {0x0326, 0x6c},
    {0x0327, 0x03},
    {0x0334, 0x40},
    {0x0336, 0x6c},
    {0x0337, 0x82},
    {0x0315, 0x25},
    {0x031c, 0xc6},
    {0x0287, 0x18},
    {0x0084, 0x00},
    {0x0087, 0x50},
    {0x029d, 0x08},
    {0x0290, 0x00},
    {0x0340, 0x05},
    {0x0341, 0xdc},
    {0x0345, 0x06},
    {0x034b, 0xb0},

    {0x0352, 0x06},
    {0x0354, 0x07},
    {0x02d1, 0xe0},
    {0x0223, 0xf2},
    {0x0238, 0xa4},
    {0x02ce, 0x7f},
    {0x0232, 0xc4},
    {0x02d3, 0x05},
    {0x0243, 0x06},
    {0x02ee, 0x30},
    {0x026f, 0x70},
    {0x0257, 0x09},
    {0x0211, 0x02},
    {0x0219, 0x09},
    {0x023f, 0x2d},
    {0x0518, 0x00},
    {0x0519, 0x01},
    {0x0515, 0x08},
    {0x02d9, 0x3f},
    {0x02da, 0x02},
    {0x02db, 0xe8},
    {0x02e6, 0x20},
    {0x021b, 0x10},
    {0x0252, 0x22},
    {0x024e, 0x22},
    {0x02c4, 0x01},
    {0x021d, 0x17},
    {0x024a, 0x01},
    {0x02ca, 0x02},
    {0x0262, 0x10},
    {0x029a, 0x20},
    {0x021c, 0x0e},
    {0x0298, 0x03},
    {0x029c, 0x00},
    {0x027e, 0x14},
    {0x02c2, 0x10},
    {0x0540, 0x20},
    {0x0546, 0x01},
    {0x0548, 0x01},
    {0x0544, 0x01},
    {0x0242, 0x1b},
    {0x02c0, 0x1b},
    {0x02c3, 0x20},
    {0x02e4, 0x10},
    {0x022e, 0x00},
    {0x027b, 0x3f},
    {0x0269, 0x0f},
    {0x02d2, 0x40},
    {0x027c, 0x08},
    {0x023a, 0x2e},
    {0x0245, 0xce},
    {0x0530, 0x20},
    {0x0531, 0x02},
    {0x0228, 0x50},
    {0x02ab, 0x00},
    {0x0250, 0x00},
    {0x0221, 0x50},
    {0x02ac, 0x00},
    {0x02a5, 0x02},
    {0x0260, 0x0b},
    {0x0216, 0x04},
    {0x0299, 0x1C},
    {0x02bb, 0x0d},
    {0x02a3, 0x02},
    {0x02a4, 0x02},
    {0x021e, 0x02},
    {0x024f, 0x08},
    {0x028c, 0x08},
    {0x0532, 0x3f},
    {0x0533, 0x02},
    {0x0277, 0xc0},
    {0x0276, 0xc0},
    {0x0239, 0xc0},
    {0x0202, 0x05},
    {0x0203, 0xd0},
    {0x0205, 0xc0},
    {0x02b0, 0x68},
    {0x0002, 0xa9},
    {0x0004, 0x01},
    {0x021a, 0x98},
    {0x0266, 0xa0},
    {0x0020, 0x01},
    {0x0021, 0x03},
    {0x0022, 0x00},
    {0x0023, 0x04},

    {0x0342, 0x07},
    {0x0343, 0x80},
    {0x03fe, 0x10},
    {0x03fe, 0x00},
    {0x0106, 0x78},
    {0x0108, 0x0c},
    {0x0114, 0x01},
    {0x0115, 0x10}, //0x12 coninute mode, 0x10 no-continue mode
    {0x0180, 0x46},
    {0x0181, 0x30},
    {0x0182, 0x05},
    {0x0185, 0x01},
    {0x03fe, 0x10},
    {0x03fe, 0x00},
    {0x000f, 0x00},
    {0x0100, 0x09}, //stream on
    //otp
    {0x0080, 0x02},
    {0x0097, 0x0a},
    {0x0098, 0x10},
    {0x0099, 0x05},
    {0x009a, 0xb0},
    {0x0317, 0x08},
    {0x0a67, 0x80},
    {0x0a70, 0x03},
    {0x0a82, 0x00},
    {0x0a83, 0x10},
    {0x0a80, 0x2b},
    {0x05be, 0x00},
    {0x05a9, 0x01},
    {0x0313, 0x80},
    {0x05be, 0x01},
    {0x0317, 0x00},
    {0x0a67, 0x00},
    {0x0000,  0x00},  // end flag
};

static camera_i2c_reg_array *gc4653_settings_table[] = {
    Allpixel_CSI2_2lane_648Mbps_24MHz_AD10bit_Master_LCG_30fps_setting,
    Allpixel_CSI2_2lane_648Mbps_24MHz_AD10bit_Master_LCG_25fps_setting,
    NULL
};

AX_S32 gc4653_reset(ISP_PIPE_ID nPipeId, AX_S32 i2cDevNum);
AX_S32 gc4653_reg_read(ISP_PIPE_ID nPipeId, AX_U32 addr);
AX_S32 gc4653_reg_write(ISP_PIPE_ID nPipeId, AX_U32 addr, AX_U32 data);
AX_S32 gc4653_write_settings(ISP_PIPE_ID nPipeId, AX_U32 setindex);
void gc4653_dgain2value(float gain, AX_U8 *dgain_int_reg, AX_U8 *dgain_sec_reg);
AX_F32 gc4653_again2value(float gain, AX_U8 *again_val);
AX_U32 gc4653_get_hts(ISP_PIPE_ID nPipeId);
AX_F32 gc4653_get_sclk(ISP_PIPE_ID nPipeId);
AX_U32 gc4653_get_vts(ISP_PIPE_ID nPipeId);
AX_U32 gc4653_set_vts(ISP_PIPE_ID nPipeId, AX_U32 vts);
AX_U32 gc4653_get_vs_hts(ISP_PIPE_ID nPipeId);
AX_S32 gc4653_get_gain_table(AX_SNS_AE_GAIN_TABLE_T *params);
AX_U32 gc4653_sns_update_regs_table(ISP_PIPE_ID nPipeId, AX_U32 nRegsAddr, AX_U8 nRegsValue);
AX_S32 gc4653_ae_get_sensor_reg_info(ISP_PIPE_ID nPipeId, AX_SNS_REGS_CFG_TABLE_T *ptSnsRegsInfo);
AX_U32 gc4653_sns_refresh_all_regs_from_tbl(ISP_PIPE_ID nPipeId);

#endif
